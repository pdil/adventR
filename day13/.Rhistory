}
} else {
chars[8] <- next_ascii %>% as.raw %>% rawToChar
}
password <- paste(chars, collapse = "")
print(password)
}
password
# vzbxxyzz
input <- read_lines("input.txt")
input
setwd("~/Desktop/github/adventR/day13")
input <- read_lines("input.txt")
input
library(magrittr)
lines <- strsplit(input, " ") %>% unlist
lines
lines <- strsplit(input, " ")
lines
lines <- strsplit(input, " ") %>% as.data.frame
lines
lines <- strsplit(input, " ")
length(lines)
df <- data.frame(name = character(), change = numeric(), amount = numeric(), next_to = character())
lines <- strsplit(input, " ")
df <- data.frame(name = character(), change = numeric(), amount = numeric(), next_to = character())
for (i in 1:length(lines)) {
name <- lines[[i]][1]
change <- ifelse(lines[[i]][3] == "gain", 1, -1)
amount <- lines[[i]][4]
next_to <- lines[[i]][11]
df <- rbind(df, data.frame(name = name, change = change, amount = amount, next_to = next_to))
}
df
df <- data.frame(name = character(), change = numeric(), amount = numeric(), next_to = character())
for (i in 1:length(lines)) {
name <- lines[[i]][1]
change <- ifelse(lines[[i]][3] == "gain", 1, -1)
amount <- lines[[i]][4]
next_to <- substr(lines[[i]][11], 1, length(lines[[i]][11]) - 1) # remove period also
df <- rbind(df, data.frame(name = name, change = change, amount = amount, next_to = next_to))
}
df
df <- data.frame(name = character(), change = numeric(), amount = numeric(), next_to = character())
for (i in 1:length(lines)) {
name <- lines[[i]][1]
change <- ifelse(lines[[i]][3] == "gain", 1, -1)
amount <- lines[[i]][4]
next_to <- substr(lines[[i]][11], 1, nchar(lines[[i]][11]) - 1) # remove period also
df <- rbind(df, data.frame(name = name, change = change, amount = amount, next_to = next_to))
}
df
library(combinat)
combinations <- permn(unique(df$name))
head(combinations)
library(dplyr)
df$name <- as.character(df$name)
df$next_to <- as.character(df$next_to)
combinations <- permn(unique(df$name))
View(df)
comb <- permn(unique(df$name))
rm(combinations)
df %>% filter(name == "Alice", next_to == "Bob") %>% select(change)
df %>% filter(name == "Alice", next_to == "Bob")
df %>% filter(name == "Alice", next_to == "Bob") %>% select(change, amount)
(df %>% filter(name == "Alice", next_to == "Bob"))$change
(df %>% filter(name == "Alice", next_to == "Bob"))$amount
df$name <- as.character(df$name)
df$change <- as.numeric(df$change)
df$amount <- as.numeric(df$amount)
df$next_to <- as.character(df$next_to)
comb <- permn(unique(df$name))
(df %>% filter(name == "Alice", next_to == "Bob"))$amount
df$name <- as.character(df$name)
df$change <- as.numeric(as.character(df$change))
df$amount <- as.numeric(as.character(df$amount))
df$next_to <- as.character(df$next_to)
(df %>% filter(name == "Alice", next_to == "Bob"))$amount
(df %>% filter(name == "Alice", next_to == "Bob"))$change
df
df <- data.frame(name = character(), change = numeric(), amount = numeric(), next_to = character())
for (i in 1:length(lines)) {
name <- lines[[i]][1]
change <- ifelse(lines[[i]][3] == "gain", 1, -1)
amount <- lines[[i]][4]
next_to <- substr(lines[[i]][11], 1, nchar(lines[[i]][11]) - 1) # remove period also
df <- rbind(df, data.frame(name = name, change = change, amount = amount, next_to = next_to))
}
df$name <- as.character(df$name)
df$change <- as.numeric(as.character(df$change))
df$amount <- as.numeric(as.character(df$amount))
df$next_to <- as.character(df$next_to)
lines <- strsplit(input, " ")
df <- data.frame(name = character(), change = numeric(), amount = numeric(), next_to = character())
input <- read_lines("input.txt")
lines <- strsplit(input, " ")
df <- data.frame(name = character(), change = numeric(), amount = numeric(), next_to = character())
for (i in 1:length(lines)) {
name <- lines[[i]][1]
change <- ifelse(lines[[i]][3] == "gain", 1, -1)
amount <- lines[[i]][4]
next_to <- substr(lines[[i]][11], 1, nchar(lines[[i]][11]) - 1) # remove period also
df <- rbind(df, data.frame(name = name, change = change, amount = amount, next_to = next_to))
}
df$name <- as.character(df$name)
df$change <- as.numeric(as.character(df$change))
df$amount <- as.numeric(as.character(df$amount))
df$next_to <- as.character(df$next_to)
df
(df %>% filter(name == "Alice", next_to == "Bob"))$change
(df %>% filter(name == "Alice", next_to == "Bob"))$amount
sums <- c()
for (j in 1:length(comb)) {
total <- 0
for (k in 1:(length(comb[[j]]) - 1)) {
ch <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$change
am <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$amount
total <- total + ch * am
}
ch <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$change
am <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$amount
sums <- c(sums, total + ch * amt)
}
comb <- permn(unique(df$name))
sums <- c()
for (j in 1:length(comb)) {
total <- 0
for (k in 1:(length(comb[[j]]) - 1)) {
ch <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$change
am <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$amount
total <- total + ch * am
}
ch <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$change
am <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$amount
sums <- c(sums, total + ch * amt)
}
for (j in 1:length(comb)) {
total <- 0
for (k in 1:(length(comb[[j]]) - 1)) {
ch <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$change
am <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$amount
total <- total + ch * am
}
ch <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$change
am <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$amount
sums <- c(sums, total + ch * am)
}
sums
for (j in 1:length(comb)) {
total <- 0
for (k in 1:(length(comb[[j]]) - 1)) {
ch <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$change
am <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$amount
total <- total + ch * am
}
ch <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$change
am <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$amount
sums <- c(sums, total + ch * am)
print(max(sums))
}
for (j in 1:length(comb)) {
total <- 0
for (k in 1:(length(comb[[j]]) - 1)) {
ch <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$change
am <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$amount
total <- total + ch * am
}
ch <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$change
am <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$amount
sums <- c(sums, total + ch * am)
print(paste(j, max(sums)))
}
comb
for (j in 1:length(comb)) {
total <- 0
ch <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][8]))$change
am <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][8]))$amount
total <- total + ch * am
for (k in 2:(length(comb[[j]]) - 1)) {
ch <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$change
am <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$amount
total <- total + ch * am
ch <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k - 1]))$change
am <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k - 1]))$amount
total <- total + ch * am
}
ch <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$change
am <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$amount
total <- total + ch * am
sums <- c(sums, total)
print(paste(j, max(sums)))
}
head(comb)
for (j in 1:length(comb)) {
total <- 0
ch <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][8]))$change
am <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][8]))$amount
total <- total + ch * am
ch <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][2]))$change
am <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][2]))$amount
total <- total + ch * am
for (k in 2:(length(comb[[j]]) - 1)) {
ch <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$change
am <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$amount
total <- total + ch * am
ch <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k - 1]))$change
am <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k - 1]))$amount
total <- total + ch * am
}
ch <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][7]))$change
am <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][7]))$amount
total <- total + ch * am
ch <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$change
am <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$amount
total <- total + ch * am
sums <- c(sums, total)
print(paste(j, max(sums)))
}
head(comb)
df
sums
head(sums)
head(sums, 100)
max(sums)
which(sums == max(sums))
library(readr)
library(magrittr)
library(combinat)
library(dplyr)
input <- read_lines("input.txt")
lines <- strsplit(input, " ")
df <- data.frame(name = character(), change = numeric(), amount = numeric(), next_to = character())
for (i in 1:length(lines)) {
name <- lines[[i]][1]
change <- ifelse(lines[[i]][3] == "gain", 1, -1)
amount <- lines[[i]][4]
next_to <- substr(lines[[i]][11], 1, nchar(lines[[i]][11]) - 1) # remove period also
df <- rbind(df, data.frame(name = name, change = change, amount = amount, next_to = next_to))
}
df$name <- as.character(df$name)
df$change <- as.numeric(as.character(df$change))
df$amount <- as.numeric(as.character(df$amount))
df$next_to <- as.character(df$next_to)
comb <- permn(unique(df$name))
sums <- c()
for (j in 1:length(comb)) {
total <- 0
ch <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][8]))$change
am <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][8]))$amount
total <- total + ch * am
ch <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][2]))$change
am <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][2]))$amount
total <- total + ch * am
for (k in 2:(length(comb[[j]]) - 1)) {
ch <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$change
am <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$amount
total <- total + ch * am
ch <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k - 1]))$change
am <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k - 1]))$amount
total <- total + ch * am
}
ch <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][7]))$change
am <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][7]))$amount
total <- total + ch * am
ch <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$change
am <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$amount
total <- total + ch * am
sums <- c(sums, total)
print(paste(j, max(sums)))
}
df
input <- read_lines("input.txt")
lines <- strsplit(input, " ")
parse_input <- function(lines) {
name <- lines[[i]][1]
change <- ifelse(lines[[i]][3] == "gain", 1, -1)
amount <- lines[[i]][4]
next_to <- substr(lines[[i]][11], 1, nchar(lines[[i]][11]) - 1) # remove period also
df <- rbind(df, data.frame(name = name, change = change, amount = amount, next_to = next_to))
}
df <- ldply(lines, parse_input)
library(plyr)
library(plyr)
input <- read_lines("input.txt")
lines <- strsplit(input, " ")
parse_input <- function(lines) {
name <- lines[[i]][1]
change <- ifelse(lines[[i]][3] == "gain", 1, -1)
amount <- lines[[i]][4]
next_to <- substr(lines[[i]][11], 1, nchar(lines[[i]][11]) - 1) # remove period also
df <- rbind(df, data.frame(name = name, change = change, amount = amount, next_to = next_to))
}
df <- ldply(lines, parse_input)
input <- read_lines("input.txt")
lines <- strsplit(input, " ")
parse_input <- function(line) {
name <- line[1]
change <- ifelse(line[3] == "gain", 1, -1)
amount <- line[4]
next_to <- substr(line[11], 1, nchar(line[11]) - 1) # remove period also
df <- rbind(df, data.frame(name = name, change = change, amount = amount, next_to = next_to))
}
df <- ldply(lines, parse_input)
df
lines
?ldply
lines <- strsplit(input, " ")
parse_input <- function(line) {
name <- line[1]
change <- ifelse(line[3] == "gain", 1, -1)
amount <- line[4]
next_to <- substr(line[11], 1, nchar(line[11]) - 1) # remove period also
data.frame(name = name, change = change, amount = amount, next_to = next_to)
}
df <- ldply(lines, parse_input)
df
str(df)
parse_input <- function(line) {
name <- line[1]
change <- ifelse(line[3] == "gain", 1, -1)
amount <- as.numeric(line[4])
next_to <- substr(line[11], 1, nchar(line[11]) - 1) # remove period also
data.frame(name = name, change = change, amount = amount, next_to = next_to)
}
df <- ldply(lines, parse_input)
str(df)
df
library(readr)
library(combinat)
library(dplyr)
library(plyr)
input <- read_lines("input2.txt")
lines <- strsplit(input, " ")
parse_input <- function(line) {
name <- line[1]
change <- ifelse(line[3] == "gain", 1, -1)
amount <- as.numeric(line[4])
next_to <- substr(line[11], 1, nchar(line[11]) - 1) # remove period also
data.frame(name = name, change = change, amount = amount, next_to = next_to)
}
df <- ldply(lines, parse_input)
df$name <- as.character(df$name)
df$next_to <- as.character(df$next_to)
comb <- permn(unique(df$name))
sums <- c()
for (j in 1:length(comb)) {
total <- 0
ch <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][8]))$change
am <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][8]))$amount
total <- total + ch * am
ch <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][2]))$change
am <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][2]))$amount
total <- total + ch * am
for (k in 2:(length(comb[[j]]) - 1)) {
ch <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$change
am <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$amount
total <- total + ch * am
ch <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k - 1]))$change
am <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k - 1]))$amount
total <- total + ch * am
}
ch <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][7]))$change
am <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][7]))$amount
total <- total + ch * am
ch <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$change
am <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$amount
total <- total + ch * am
sums <- c(sums, total)
}
library(readr)
library(combinat)
library(dplyr)
library(plyr)
input <- read_lines("input2.txt")
lines <- strsplit(input, " ")
parse_input <- function(line) {
name <- line[1]
change <- ifelse(line[3] == "gain", 1, -1)
amount <- as.numeric(line[4])
next_to <- substr(line[11], 1, nchar(line[11]) - 1) # remove period also
data.frame(name = name, change = change, amount = amount, next_to = next_to)
}
df <- ldply(lines, parse_input)
df$name <- as.character(df$name)
df$next_to <- as.character(df$next_to)
comb <- permn(unique(df$name))
sums <- c()
for (j in 1:length(comb)) {
total <- 0
ch <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][8]))$change
am <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][8]))$amount
total <- total + ch * am
ch <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][2]))$change
am <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][2]))$amount
total <- total + ch * am
for (k in 2:(length(comb[[j]]) - 1)) {
ch <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$change
am <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$amount
total <- total + ch * am
ch <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k - 1]))$change
am <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k - 1]))$amount
total <- total + ch * am
}
ch <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][7]))$change
am <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][7]))$amount
total <- total + ch * am
ch <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$change
am <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$amount
total <- total + ch * am
sums <- c(sums, total)
print(noquote(paste(j, max(sums))))
}
max(sums)
# 733
df
input <- read_lines("input2.txt")
lines <- strsplit(input, " ")
parse_input <- function(line) {
name <- line[1]
change <- ifelse(line[3] == "gain", 1, -1)
amount <- as.numeric(line[4])
next_to <- substr(line[11], 1, nchar(line[11]) - 1) # remove period also
data.frame(name = name, change = change, amount = amount, next_to = next_to)
}
df <- ldply(lines, parse_input)
df
library(readr)
library(combinat)
library(dplyr)
library(plyr)
input <- read_lines("input2.txt")
lines <- strsplit(input, " ")
parse_input <- function(line) {
name <- line[1]
change <- ifelse(line[3] == "gain", 1, -1)
amount <- as.numeric(line[4])
next_to <- substr(line[11], 1, nchar(line[11]) - 1) # remove period also
data.frame(name = name, change = change, amount = amount, next_to = next_to)
}
df <- ldply(lines, parse_input)
df$name <- as.character(df$name)
df$next_to <- as.character(df$next_to)
comb <- permn(unique(df$name))
sums <- c()
for (j in 1:length(comb)) {
total <- 0
ch <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][8]))$change
am <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][8]))$amount
total <- total + ch * am
ch <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][2]))$change
am <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][2]))$amount
total <- total + ch * am
for (k in 2:(length(comb[[j]]) - 1)) {
ch <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$change
am <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$amount
total <- total + ch * am
ch <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k - 1]))$change
am <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k - 1]))$amount
total <- total + ch * am
}
ch <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][7]))$change
am <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][7]))$amount
total <- total + ch * am
ch <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$change
am <- (df %>% filter(name == comb[[j]][8], next_to == comb[[j]][1]))$amount
total <- total + ch * am
sums <- c(sums, total)
print(noquote(paste(j, max(sums))))
}
library(readr)
library(combinat)
library(dplyr)
library(plyr)
input <- read_lines("input2.txt")
lines <- strsplit(input, " ")
parse_input <- function(line) {
name <- line[1]
change <- ifelse(line[3] == "gain", 1, -1)
amount <- as.numeric(line[4])
next_to <- substr(line[11], 1, nchar(line[11]) - 1) # remove period also
data.frame(name = name, change = change, amount = amount, next_to = next_to)
}
df <- ldply(lines, parse_input)
df$name <- as.character(df$name)
df$next_to <- as.character(df$next_to)
comb <- permn(unique(df$name))
sums <- c()
for (j in 1:length(comb)) {
total <- 0
ch <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][9]))$change
am <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][9]))$amount
total <- total + ch * am
ch <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][2]))$change
am <- (df %>% filter(name == comb[[j]][1], next_to == comb[[j]][2]))$amount
total <- total + ch * am
for (k in 2:(length(comb[[j]]) - 1)) {
ch <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$change
am <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k + 1]))$amount
total <- total + ch * am
ch <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k - 1]))$change
am <- (df %>% filter(name == comb[[j]][k], next_to == comb[[j]][k - 1]))$amount
total <- total + ch * am
}
ch <- (df %>% filter(name == comb[[j]][9], next_to == comb[[j]][8]))$change
am <- (df %>% filter(name == comb[[j]][9], next_to == comb[[j]][8]))$amount
total <- total + ch * am
ch <- (df %>% filter(name == comb[[j]][9], next_to == comb[[j]][1]))$change
am <- (df %>% filter(name == comb[[j]][9], next_to == comb[[j]][1]))$amount
total <- total + ch * am
sums <- c(sums, total)
print(noquote(paste(j, max(sums))))
}
